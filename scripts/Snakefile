

configfile: "config.yaml"


outdir_name = "thesis_from_{}_to_{}".format(config["START_DATE"], config["END_DATE"])

rule all:
    input:
        csv_file_extra = os.path.join("outputs", outdir_name, "extra_information.csv")


rule get_basic_info:
    output:
        outDir = directory(os.path.join("outputs", outdir_name)),
        outFile = os.path.join("outputs", outdir_name, "basic_information.csv"),
    shell :
        "python rules/get_basic_info.py {config[START_DATE]} {config[END_DATE]} {output.outFile}"

rule scrapping_thesis_pages:
    input:
        csv_file = os.path.join("outputs", outdir_name, "basic_information.csv"),
    output:
        csv_file_scrapping= os.path.join("outputs", outdir_name, "extra_information.csv")
    threads:
        6
    shell:
        "python rules/scrapping_thesis_pages.py {input.csv_file} {output.csv_file_scrapping} {threads}"

rule cleaning_data:
    input:
        csv_basic = os.path.join("outputs", outdir_name, "basic_information.csv"),
        csv_scrapping = os.path.join("outputs", outdir_name, "extra_information.csv")
    output :
        csv_clean = os.path.join("outputs", outdir_name, "data_clean.csv")
    shell:
        "blahblahblah"
